{"./":{"url":"./","title":"前言","keywords":"","body":"Notes 记录平时遇到的一些问题以及基础知识 "},"java/路径.html":{"url":"java/路径.html","title":"路径","keywords":"","body":"路径相关 获得运行时的绝对路径 访问maven中resources中的文件 获得系统的路径分隔符 获得运行时的绝对路径 (new File(\"\").getAbsolutePath()) 访问maven中resources中的文件 InputStream in = SpellCheckController.class.getClassLoader().getResourceAsStream(\"rules-en-English.xml\") 获得系统的路径分隔符 System.getProperty(\"file.separator\") "},"java/Lombok.html":{"url":"java/Lombok.html","title":"Lombok","keywords":"","body":"Lombok Lombok注解 @Data：注解在类上，将类提供的所有属性都添加get、set方法，并添加、equals、canEquals、hashCode、toString方法 @Setter：注解在类上，为所有属性添加set方法、注解在属性上为该属性提供set方法 @Getter：注解在类上，为所有的属性添加get方法、注解在属性上为该属性提供get方法 @NotNull：在参数中使用时，如果调用时传了null值，就会抛出空指针异常 @Synchronized: 用于方法，可以锁定指定的对象，如果不指定，则默认创建一个对象锁定 @Log: 作用于类，创建一个log属性 @Builder：使用builder模式创建对象 @NoArgsConstructor：创建一个无参构造函数 @AllArgsConstructor：创建一个全参构造函数 @ToStirng：创建一个toString方法 @Accessors(chain = true): 使用链式设置属性，set方法返回的是this对象。 @RequiredArgsConstructor：创建对象 @UtilityClass: 工具类 @ExtensionMethod: 设置父类 @FieldDefaults：设置属性的使用范围，如private、public等，也可以设置属性是否被final修饰。 @Cleanup: 关闭流、连接点。 @EqualsAndHashCode：重写equals和hashcode方法。 @toString：创建toString方法。 "},"spring/web-xml-配置.html":{"url":"spring/web-xml-配置.html","title":"web.xml 配置","keywords":"","body":"web.xml 配置 加载Spring配置文件 配置DispatcherServlet 配置encoding 获得项目的绝对路径 加载Spring配置文件 applicationContext.xml放到WEB-INF下 contextConfigLocation WEB-INF/applicationContext.xml applicaitonContext.xml放到resources文件夹中 contextConfigLocation classpath:applicationContext.xml 配置DispatcherServlet 配置文件放到WEB-INF下, 文件名为${servlet-name}-servlet.xml spring org.springframework.web.servlet.DispatcherServlet 1 spring / 指定配置文件位置 spring org.springframework.web.servlet.DispatcherServlet contextConfigLocation classpath:spring-servlet.xml 1 spring / 配置encoding encodingFilter org.springframework.web.filter.CharacterEncodingFilter encoding UTF-8 forceEncoding true encodingFilter /* 获得项目的绝对路径 webAppRootKey ft.webapp org.springframework.web.util.WebAppRootListener 在项目中使用System.getProperty(\"ft.webapp\")来获得项目路径 "},"spring/mvc/":{"url":"spring/mvc/","title":"使用","keywords":"","body":"基本使用 返回页面的两种方式 初始化类 返回页面的两种方式 @RequestMapping(\"/\") public ModelAndView welcome (ModelMap model) { ModelAndView view = new ModelAndView(\"index\"); model.addAttribute(\"introSelf\", \"I'm Spring, I'm Coming.\"); return view; } @RequestMapping(\"/\") public String welcome (ModelMap model) { model.addAttribute(\"introSelf\", \"I'm Spring, I'm Coming.\"); return \"index\"; } 初始化类 在 applicationContext.xml 中加入初始化代码 "},"idea/":{"url":"idea/","title":"使用","keywords":"","body":"IDEA 资源 自动生成 serialVersionUID 设置Terminal使用git bash 使用 多行编辑 查看 git 文件修改 Live Template Postfix Completion 插件 Lombok IdeaVim 插件 资源 IntelliJ IDEA 简体中文专题教程 自动生成 serialVersionUID File -> settings... ->Editor -> Inspsctions 勾选 Java -> Serialization issues -> Serializable class without 'serialVersionUID' 设置Terminal使用git bash 找到 Settings -> Tools -> Terminal，在 Shell path里填上 C:\\Program Files (x86)\\Git\\bin\\sh.exe -login -i 路径可能不同，但是要加上-login -i 选项 使用 多行编辑 按住 Alt 选择 查看 git 文件修改 Version Control -> 选择文件 -> 右击 Show Diff Live Template $END$，表示最后都编辑完后光标所处的位置 $SELECTION$，表示设置环绕实时代码模板，环绕功能下面会模板专门进行介绍 $变量名$- 自定以变量 Postfix Completion 使用方法： 变量名.postfix 0.return -> return 0; 插件 Alibaba Java Coding Guidelines CodeGlance FindBugs Lombok IdeaVim Lombok https://github.com/mplushnikov/lombok-intellij-plugin Enable Annotation Processing 设为 true maven 添加依赖 org.projectlombok lombok 1.16.18 provided IdeaVim 插件 定制 vim 插件 inoremap inoremap inoremap inoremap inoremap inoremap inoremap inoremap jk "},"idea/快捷键.html":{"url":"idea/快捷键.html","title":"快捷键","keywords":"","body":"Win 快捷键 Intellij IDEA 快捷键整理（TonyCody） 格式化 - Ctrl + Alt + L 自动修正 - Ctrl + Enter 重构 - Shift + F6 删除行 - Ctrl + X 复制行 - Ctrl + D 注释 - Ctrl + / 或者 Ctrl + Shift + / 查找类中的方法或者变量 - Ctrl + Shift + Alt + N 上/下移一行 - Alt + Shift + Up/Down 显示类层次结构 - Ctrl + H 显示注释文档 - Ctrl + Q 返回上次浏览的位置 - Ctrl + Alt + Left/Right 方法间快速定位 - Alt + Up/Down 上下移动语句（方法）- Ctrl + Shift + Up/Dwon 高亮错误或者警告快速定位 - F2 或者 Shift + F2 查找相同文本 - Alt + F3 跳转到第一行或者最后一行 - Ctrl + Up/Down 跳转到定义处 - Ctrl + B 或者 Ctrl + click 跳转到方法定义处 - Ctrl + Alt + B 跳转到上次编辑的地方 - Ctrl + Shift + Backspace 重写方法 - Ctrl + O 查找整个工程中使用地某一个类、方法或者变量的位置 - Alt + F7 大小写转化 - Ctrl + Shift + U 删除当前行 - Ctrl + Y 向下插入新行 - Shift + Enter 查找 - Ctrl + F 替换 - Ctrl + R 全局查找 - Ctrl + Shift + F 定位到行 - Ctrl + G 按单词删除 - Ctrl + BackSpace 在多个 panel 中打开同一个文件 - Shift + Enter 显示当前文件结构 - Ctrl + , Mac 快捷键 查看文档 - Ctrl + J 加载文件 - Command + Alt + y "},"sublime/":{"url":"sublime/","title":"使用","keywords":"","body":"Sublime Text 配置 配置文件 字体配置 插件 Markdown 编码 格式化 终端 使用 选择指定行的区域 配置 配置文件 { \"auto_indent\": true, \"color_scheme\": \"Packages/Color Scheme - Default/Dawn.tmTheme\", \"default_encoding\": \"UTF-8\", \"font_face\": \"YaHei Consolas Hybrid\", \"font_size\": 11, \"ignored_packages\": [ \"Vintage\" ], \"line_padding_bottom\": 1, \"line_padding_top\": 1, \"update_check\": false, \"tab_size\" : 4, \"translate_tabs_to_spaces\" : false } 字体配置 YaHei-Consolas-Hybrid-1.12， 中文使用雅黑，英文使用 Consolas，可以解决 ubuntu 里中英文不对齐的问题 插件 Markdown Markdown Extended MarkdownLight 编码 GBK Encoding Support Convert to UTF8 格式化 Alignment - 对齐 SublimeAStyleFormatter - 格式化代码 快捷键: crtl + alt + f 终端 Ternimal - 打开终端（定位到当前文件夹） 配置：Setting User{ \"terminal\": \"terminator\" } 使用 Ctrl+G - 跳转到指定行 Ctrl+R - 跳转到方法 选择指定行的区域 Ctrl+G - 跳转到区域的行首 Edit -> Mark -> Set Mark Ctrl+G - 跳转到区域行尾 Edit -> Mark -> Select to Mark "},"sublime/中文输入.html":{"url":"sublime/中文输入.html","title":"中文输入","keywords":"","body":"Ubuntu 下输入中文 创建sublime_imfix.c 输入下面内容 /* sublime-imfix.c Use LD_PRELOAD to interpose some function to fix sublime input method support for linux. By Cjacker Huang gcc -shared -o libsublime-imfix.so sublime_imfix.c `pkg-config --libs --cflags gtk+-2.0` -fPIC LD_PRELOAD=./libsublime-imfix.so sublime_text */ #include #include typedef GdkSegment GdkRegionBox; struct _GdkRegion { long size; long numRects; GdkRegionBox *rects; GdkRegionBox extents; }; GtkIMContext *local_context; void gdk_region_get_clipbox (const GdkRegion *region, GdkRectangle *rectangle) { g_return_if_fail (region != NULL); g_return_if_fail (rectangle != NULL); rectangle->x = region->extents.x1; rectangle->y = region->extents.y1; rectangle->width = region->extents.x2 - region->extents.x1; rectangle->height = region->extents.y2 - region->extents.y1; GdkRectangle rect; rect.x = rectangle->x; rect.y = rectangle->y; rect.width = 0; rect.height = rectangle->height; //The caret width is 2; //Maybe sometimes we will make a mistake, but for most of the time, it should be the caret. if(rectangle->width == 2 && GTK_IS_IM_CONTEXT(local_context)) { gtk_im_context_set_cursor_location(local_context, rectangle); } } //this is needed, for example, if you input something in file dialog and return back the edit area //context will lost, so here we set it again. static GdkFilterReturn event_filter (GdkXEvent *xevent, GdkEvent *event, gpointer im_context) { XEvent *xev = (XEvent *)xevent; if(xev->type == KeyRelease && GTK_IS_IM_CONTEXT(im_context)) { GdkWindow * win = g_object_get_data(G_OBJECT(im_context),\"window\"); if(GDK_IS_WINDOW(win)) gtk_im_context_set_client_window(im_context, win); } return GDK_FILTER_CONTINUE; } void gtk_im_context_set_client_window (GtkIMContext *context, GdkWindow *window) { GtkIMContextClass *klass; g_return_if_fail (GTK_IS_IM_CONTEXT (context)); klass = GTK_IM_CONTEXT_GET_CLASS (context); if (klass->set_client_window) klass->set_client_window (context, window); if(!GDK_IS_WINDOW (window)) return; g_object_set_data(G_OBJECT(context),\"window\",window); int width = gdk_window_get_width(window); int height = gdk_window_get_height(window); if(width != 0 && height !=0) { gtk_im_context_focus_in(context); local_context = context; } gdk_window_add_filter (window, event_filter, context); } 编译文件 sudo apt-get install build-essential libgtk2.0-dev sudo gcc -shared -o libsublime-imfix.so sublime_imfix.c `pkg-config --libs --cflags gtk+-2.0` -fPIC 复制文件 sudo cp libsublime-imfix.so /opt/sublime_text/ 配置文件 修改 subl 文件 sudo gedit /usr/bin/subl 修改为: #!/bin/sh LD_PRELOAD=/opt/sublime_text/libsublime-imfix.so exec /opt/sublime_text/sublime_text \"$@\" 修改sublime_text.desktop sudo gedit /usr/share/applications/sublime-text.desktop 修改为： [Desktop Entry] Version=1.0 Type=Application Name=Sublime Text GenericName=Text Editor Comment=Sophisticated text editor for code, markup and prose Exec=bash -c 'LD_PRELOAD=/opt/sublime_text/libsublime-imfix.so /opt/sublime_text/sublime_text %F' Terminal=false MimeType=text/plain; Icon=sublime-text Categories=TextEditor;Development;Utility; StartupNotify=true Actions=Window;Document; X-Desktop-File-Install-Version=0.22 [Desktop Action Window] Name=New Window Exec=bash -c 'LD_PRELOAD=/opt/sublime_text/libsublime-imfix.so /opt/sublime_text/sublime_text -n' OnlyShowIn=Unity; [Desktop Action Document] Name=New File Exec=bash -c 'LD_PRELOAD=/opt/sublime_text/libsublime-imfix.so /opt/sublime_text/sublime_text --command new_file' OnlyShowIn=Unity; "},"atom/":{"url":"atom/","title":"使用","keywords":"","body":"Atom 设置 快捷键 插件 symbol-tree-view autocomplete-plus terminal-plus atom-beautify atom-project-manager markdown-preview-enhanced markdown-themeable-pdf vim-mode-plus 设置 增加编辑器底部的空间 - 选中Edit -> Preferences -> Editor -> Scroll Past End 快捷键 Ctrl + r - 弹出函数列表框 Ctrl + G - 跳转到行 Ctrl + shift + k - 删除一行 插件 symbol-tree-view 类似于vim的taglist autocomplete-plus 代码补全(自带) 配置 Minimum Word Length - 配置键入几个字母给提示 terminal-plus platformio-ide-terminalatom终端 atom-beautify 安装 uncrustify sudo apt-get install uncrustify 配置 C 语言格式Edit -> Preference -> Packages -> atom-beautify -> Settings -> C -> Config Path，输入配置文件路径 配置文件参考: 文件1，文件2示例indent_columns = 4 atom-project-manager 列出项目 - alt-shift-p 保存项目 - Project Manager: Save Project 编辑项目 - Project Manager: Edit Project markdown-preview-enhanced ctrl + shift + m - 打开预览窗口 ctrl + shift + p ，输入 create toc - 创建文件目录 支持导出pdf markdown-themeable-pdf 导出pdf，十分好用 ctrl + shift + e - 快捷键 vim-mode-plus vim 插件 修改按键映射，配置文件地址： \\.atom\\packages\\vim-mode-plus\\keymaps 配置内容： 'atom-text-editor.vim-mode-plus:not(.normal-mode)': 'j k': 'vim-mode-plus:activate-normal-mode' 'atom-text-editor.vim-mode-plus.insert-mode': 'ctrl-o': 'vim-mode-plus:move-to-last-character-of-line' 'ctrl-h': 'vim-mode-plus:move-left' 'ctrl-j': 'vim-mode-plus:move-down' 'ctrl-k': 'vim-mode-plus:move-up' 'ctrl-l': 'vim-mode-plus:move-right' "},"chrome/":{"url":"chrome/","title":"使用","keywords":"","body":"Chrome 使用Chrome 开发者工具写 js 使用Chrome 开发者工具写 js 打开开发者工具，Sources -> Snippets "},"apache/":{"url":"apache/","title":"使用","keywords":"","body":"基本使用 取消开机启动 相关命令 默认网站位置 取消开机启动 安装 sysv-rc-conf sudo apt-get install sysv-rc-conf 运行sysv-rc-conf sudo sysv-rc-conf 相关命令 // 启动 # /etc/init.d/apache2 start or $ sudo /etc/init.d/apache2 start // 暂停 # /etc/init.d/apache2 restart or $ sudo /etc/init.d/apache2 restart // 重启 # /etc/init.d/apache2 stop or $ sudo /etc/init.d/apache2 stop 默认网站位置 /var/www/html "},"c/Makefile.html":{"url":"c/Makefile.html","title":"Makefile","keywords":"","body":"Makefile 自动生成依赖关系 自动生成依赖关系 icc -MM filename.c "},"c/GDB.html":{"url":"c/GDB.html","title":"GDB","keywords":"","body":"GDB 调试段错误 调试段错误 配置dump core 文件的大小ulimit -c unlimited 调试 程序运行失败以后会生成 core.xxxxx 文件，使用gdb运行gdb [exec file] [core file] gdb ./test core.11 然后输入 where 或者 bt 就可以定位到出错的位置 "},"c/Cmake.html":{"url":"c/Cmake.html","title":"Cmake","keywords":"","body":"CMake 使用记录 安装 配置编译器 安装 通过源码安装 CMake，可以没有管理员权限 wget http://www.cmake.org/files/v3.5/cmake-3.5.2.tar.gz tar -xf cmake*.tar.gz cd cmake* ./configure --prefix=$HOME make make install 然后修改 .bashrc 文件 PATH=new-cmakepath/bin:$PATH export PATH 配置编译器 export CC=/usr/local/bin/gcc export CXX=/usr/local/bin/g++ cmake /path/to/your/project make "},"git/":{"url":"git/","title":"使用","keywords":"","body":"基本使用 配置 配置全局用户名邮箱 生成密钥 缓存用户名和密码 分支 标签 回滚 本地代码回滚 远程代码库回滚 配置 配置全局用户名邮箱 git config --global user.name \"username\" git config --global user.email \"email\" 生成密钥 ssh-keygen -C 'email address' -t rsa 缓存用户名和密码 git config --global credential.helper cache git config --global credential.helper 'cache --timeout=3600' # Set the cache to timeout after 1 hour (setting is in seconds) git config --global credential.helper 'cache --timeout=259200' 分支 创建 git branch gh-pages 切换 git checkout gh-pages 创建并切换 git checkout -b gh-pages 删除分支 // 本地 git branch -D br // 远程 git push origin --delete 标签 git tag -a v1.4 -m 'my version 1.4' git push origin v1.4 // 将本地所有标签push到远程服务器 git push origin --tags 回滚 Git 代码库回滚记录 本地代码回滚 git reset --hard commit-id //回滚到commit-id，将commit-id之后提交的commit进行清除 git reset --hard HEAD~3 //将最近3次的提交回滚 远程代码库回滚 1、git checkout the_branch 2、git pull 3、git reset --hard the_commit_id //把the_branch本地回滚到the_commit_id 4、git push origin :the_branch //删除远程 the_branch(冒号前面的空格不能少，原理是把一个空分支push到server上，相当于删除该分支。) 5、git push origin the_branch //用回滚后的本地分支重新建立远程分支 "},"html/":{"url":"html/","title":"语法","keywords":"","body":"使用记录 Viewport Viewport "},"markdown/语法.html":{"url":"markdown/语法.html","title":"语法","keywords":"","body":"语法 创建表格 创建表格 示例: | 标题1 | 标题2 | |:------- |:------ | | 内容 | 内容 | 说明 左对齐: :---- 右对齐: ----: 居中: :---: "},"markdown/mathjax.html":{"url":"markdown/mathjax.html","title":"MathJax语法","keywords":"","body":"MathJax语法 B>(⌈T1/2⌉+⌈T2/2⌉)B > (\\lceil \\sqrt{T1}/2 \\rceil + \\lceil \\sqrt{T2}/2 \\rceil )B>(⌈√​T1​​​/2⌉+⌈√​T2​​​/2⌉) "},"maven/":{"url":"maven/","title":"使用","keywords":"","body":"基本使用 配置mirrors 使用properties定义变量 定义source和resources文件夹 配置编译JDK版本及生成独立jar包 配置mirrors 找到 安装目录/conf/setting.xml nexus-osc central Nexus osc http://maven.oschina.net/content/groups/public/ nexus-tmatesoft central Nexus tmatesoft http://maven.tmatesoft.com/content/groups/public/ 使用properties定义变量 4.2.3.RELEASE org.springframework spring-context ${spring.version} 定义source和resources文件夹 src/main/java src/test/java src/main/resources 配置编译JDK版本及生成独立jar包 maven-compiler-plugin 1.7 1.7 UTF-8 org.apache.maven.plugins maven-assembly-plugin 2.5.5 bitpal.Main jar-with-dependencies make-assembly package single "},"nodejs/":{"url":"nodejs/","title":"使用","keywords":"","body":"基础知识 版本号 修改全局路径 版本号 *: 任意版本 1.1.0: 指定版本 ~1.1.0: >=1.1.0 && =1.1.0 && 其中 ~ 和 ^ 两个前缀让人比较迷惑，简单的来说： ~ 前缀表示，安装大于指定的这个版本，并且匹配到 x.y.z 中 z 最新的版本。 ^ 前缀在 ^0.y.z 时的表现和 ~0.y.z 是一样的，然而 ^1.y.z 的时候，就会 匹配到 y 和 z 都是最新的版本。 特殊的是，当版本号为 ^0.0.z 或者 ~0.0.z 的时候，考虑到 0.0.z 是一个不稳定版本， 所以它们都相当于 =0.0.z。 修改全局路径 npm config set prefix \"D:\\nodejs\\node_global\" "},"python/":{"url":"python/","title":"使用","keywords":"","body":"基本使用 ubuntu 修改系统默认的python版本 开启web服务 ubuntu 修改系统默认的python版本 echo alias python=python3 >> ~/.bashrc source ~/.bashrc 开启web服务 python -m SimpleHTTPServer 80 "},"ubuntu/命令.html":{"url":"ubuntu/命令.html","title":"命令","keywords":"","body":"命令 scp export unset 重启网卡 shadowsocks 内存 Tree whereis 配置df du cd dpkg rsync 复制文件 scp 进行远程拷贝 复制文件 scp local_file remote_username@remote_ip:remote_folder scp local_file remote_username@remote_ip:remote_file 复制目录 scp -r local_folder remote_username@remote_ip:remote_folder 命令参数 -P : 指定端口号 -1 : 强制scp命令使用协议ssh1 -2 : 强制scp命令使用协议ssh2 配置-4 : 强制scp命令只使用IPv4寻址 -6 : 强制scp命令只使用IPv6寻址 export 语法 export [-fnp] [变量名称]=[变量值] -f : 代表[变量名称]中为函数名称 -n : 删除指定的变量。变量实际上并未删除，只是不会输出到后续指令的执行环境中 -p : 列出所有的shell赋予程序的环境变量 unset 删除环境变量 配置unset ENVNAME 重启网卡 查看网卡信息 ifconfig 重启网卡 ifconfig eth0 down ifconfig eth0 up 或者 /etc/init.d/network restart shadowsocks 配置 { \"server\":\"my_server_ip\", \"server_port\":8388, \"local_address\": \"127.0.0.1\", \"local_port\":1080, \"password\":\"mypassword\", \"timeout\":300, \"method\":\"aes-256-cfb\", } 配置后台运行 (sslocal -c shadow.json &) 关闭shadowsocks pkill sslocal 内存 查看内存使用情况 free -m 清理内存 echo 1 > /proc/sys/vm/drop_caches Tree tree 生成目录树， 如下面的样式， . ├── Git ├── Java ├── Markdown ├── Maven ├── Spring │ └── MVC ├── Ubuntu └── 开发工具 参数 -d: 只生成目录 whereis whereis 用于程序名的搜索， 例如 whereis grep 参数 -b: 搜索二进制 -m: man说明文件 -s: 源代码文件 省略参数： 返回全部信息 Linux的五个查找命令 配置df du 查看硬盘空间 df -h - 查看各分区大小 du -sh dir - 查看 dir 目录大小 du -sh * - 查看当前目录下的文件和子目录大小 cd 返回cd之前的目录 cd $OLDPWD dpkg 安装 deb 软件 安装 dpkg -i xx.deb 列出关联文件 安装完包后，可以使用该命令查看软件安装到什么地方 dpkg -L package 显示包的版本 dpkg -l package 移除软件 // 保留配置 dpkg -r package // 不保留配置 dpkg -P package 查找包的详细信息 dpkg -s package rsync 复制文件 复制时排除文件和文件夹, cp command to exclude certain files from being copied rsync -av --exclude='path1/to/exclude' --exclude='path2/to/exclude' source destination "},"ubuntu/大文件.html":{"url":"ubuntu/大文件.html","title":"大文件","keywords":"","body":"打开大文件 glogg(只是查看) 安装 sudo apt-get install glogg 使用 glogg text.txt JOE(可编辑) 安装 sudo apt-get install joe 使用 joe test.txt 使用joe打开文件后可以直接编辑文件, 其他操作例如跳转、搜索等需要配合 ctrl 键来使用。使用 ctrl + k + h来打开帮助 "},"ubuntu/配置.html":{"url":"ubuntu/配置.html","title":"配置","keywords":"","body":"配置 开机启动应用程序 搜索 -> 开机启动应用程序 (可以是bash脚本，命令: /bin/bash **.sh) 更换源 配置文件 /etc/apt/sources.list 配置信息 deb http://mirrors.ustc.edu.cn/ubuntu/ xenial main restricted universe multiverse deb http://mirrors.ustc.edu.cn/ubuntu/ xenial-security main restricted universe multiverse deb http://mirrors.ustc.edu.cn/ubuntu/ xenial-updates main restricted universe multiverse deb http://mirrors.ustc.edu.cn/ubuntu/ xenial-proposed main restricted universe multiverse deb http://mirrors.ustc.edu.cn/ubuntu/ xenial-backports main restricted universe multiverse deb-src http://mirrors.ustc.edu.cn/ubuntu/ xenial main restricted universe multiverse deb-src http://mirrors.ustc.edu.cn/ubuntu/ xenial-security main restricted universe multiverse deb-src http://mirrors.ustc.edu.cn/ubuntu/ xenial-updates main restricted universe multiverse deb-src http://mirrors.ustc.edu.cn/ubuntu/ xenial-proposed main restricted universe multiverse deb-src http://mirrors.ustc.edu.cn/ubuntu/ xenial-backports main restricted universe multiverse 设置各种路径 // c++ include 路径 export CPLUS_INCLUDE_PATH=/home/zhangjikai/下载/seqan-library-2.3.2/include export LD_LIBRARY_PATH=/lib:/usr/lib:/usr/local/lib export PATH=\"$PATH:$HOME/gcc/bin/\" "},"ubuntu/软件.html":{"url":"ubuntu/软件.html","title":"软件","keywords":"","body":"软件 chrome shadowsocks 安装 配置 Terminator GDebi 搜狗输入法 Atom Java uGet Thunar PCManFM Wps 缺少字体 SublimeText chrome wget -q -O - http://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add - sudo sh -c 'echo \"deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main\" >> /etc/apt/sources.list.d/google.list' sudo apt-get update sudo apt-get install google-chrome-stable shadowsocks 安装 sudo apt-get install python-gevent python-pip sudo pip install shadowsocks 配置 编写 shadow.json { \"server\":\"xxx\", \"server_port\":xxxx, \"local_port\":1080, \"password\":\"xxxx\", \"timeout\":600, \"method\":\"AES-256-CFB\" } 启动，加上 (&) 会在后台执行 (sslocal -c shadow.json &) Terminator sudo apt-get install terminator 使用 GDebi 安装 deb 软件包，会自动安装 deb 包所需要的依赖 安装 sudo apt-get install gdebi 使用 右键 deb 包，选择打开方式，或者 sudo gdebi 搜狗输入法 官网下载，使用 GDebi 安装。 Atom 官网下载 Java sudo add-apt-repository ppa:webupd8team/java sudo apt-get update sudo apt-get install oracle-java8-installer uGet 下载工具 sudo apt-get install uget Thunar 文件管理器 sudo apt-get install thunar 设置里可以设置中键在新标签页中打开文件 PCManFM 文件管理器 sudo add-apt-repository ppa:lubuntu-dev/lubuntu-daily sudo apt-get update sudo apt-get install pcmanfm 设为默认文件管理器 xdg-mime default pcmanfm.desktop inode/directory sudo mv /etc/xdg/autostart/nautilus-autostart.desktop /etc/xdg/autostart/nautilus-autostart.desktop.bak cd /etc/xdg/autostart sudo touch pcmanfm-autostart.desktop 在 pcmanfm-autostart.desktop 写入以下内容 [Desktop Entry] Type=Application Name=File Manager PCManFM Exec=pcmanfm --desktop OnlyShowIn=GNOME;Unity;Pantheon; NoDisplay=true Wps 官网下载 缺少字体 这里下载字体，解压，进入文件夹，复制到 /usr/share/fonts 目录中sudo cp * /usr/share/fonts/ 生成字体索引sudo mkfontscale sudo mkfontdir 更新字体缓存sudo fc-cache 如果缺少中文字体，可以将 windows 系统中 Windows -> Fonts 中的字体按照上面的方法添加到 ubuntu 系统中 SublimeText sudo add-apt-repository ppa:webupd8team/sublime-text-3 sudo apt-get update sudo apt-get install sublime-text-installer "},"windows/ssh.html":{"url":"windows/ssh.html","title":"SSH","keywords":"","body":"SSH 工具 SecureCRT + Xming Server "},"windows/配置.html":{"url":"windows/配置.html","title":"配置","keywords":"","body":"配置 取消屏幕旋转快捷键 以Intel集成显卡为例 打开【控制面板】 打开【英特尔图形和媒体控制面板】 进入【选项和支持】\\【快捷键管理中心】 将【快捷键功能】取消勾选即可 "},"windows/office.html":{"url":"windows/office.html","title":"Office","keywords":"","body":"Office 删除Office Office 全版本官方卸载清理工具下载 Excel 计算 =AVERAGE(B8:I8/B4:I4) 然后按 Ctrl + Shift +Enter "},"windows/ConEmu.html":{"url":"windows/ConEmu.html","title":"ConEmu","keywords":"","body":"ConEmu window console 配置 在右键菜单中添加 ConEmu Here 右键 -> setttings -> Integration -> ConEmu Here "},"软件/":{"url":"软件/","title":"软件","keywords":"","body":"软件 实用软件 VPS 配置 使用kcptun 加速vps SSH 代理 实用软件 LICEcap - gif 录像 VPS 配置 使用kcptun 加速vps 教程地址 一键安装脚本wget --no-check-certificate https://raw.githubusercontent.com/kuoruan/kcptun_installer/master/kcptun.sh chmod +x ./kcptun.sh ./kcptun.sh 需要加速的窗口设为shadowsocks的 安装完成后保存给的客户端配置文件，放到文件 kcp-config 里 下载客户端，注意和服务器一致 启动客户端./client_linux_amd64 -c kcp-config 更改shadowsocks 地址为 127.0.0.1，端口为 kcp 客户端监听的端口 服务器上 kcptun 的配置文件位于 /usr/share/kcptun 中，启动 kcptun 的命令 service supervisord {start|stop|restart|status} SSH 代理 ssh -N -D 0.0.0.0:7070 user@server SwitchyOmega: socks5 127.0.0.1 7070 "}}